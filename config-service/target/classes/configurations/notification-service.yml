server:
  port: 8084
spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
    # Payment Service MongoDB Configuration
    data:
      mongodb:
        host: ${MONGODB_HOST}
        port: ${MONGODB_PORT}
        database: ${MONGODB_DATABASE}
        username: ${MONGODB_USERNAME}
        password: ${MONGODB_PASSWORD}
        #        authentication-database: ${MONGODB_AUTH_DATABASE}
        authentication-mechanism: ${MONGODB_AUTH_MECHANISM}
#        ssl: ${MONGODB_SSL_ENABLED:false} # Default to false if not provided

# Prometheus Configuration
management:
  endpoints:
    web:
      exposure:
        include: prometheus
  prometheus:
    metrics:
      export:
        enabled: true

  # kafka configuration
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: orderConfirmation:code.with.vanilson.notification.kafka.order.OrderConfirmation,paymentConfirmation:code.with.vanilson.notification.kafka.payment.PaymentConfirmation
  mail:
    host: localhost
    port: 1025
    username: wayne
    password: wayne
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connection timeout: 5000
        timeout: 3000
        write timeout: 5000


