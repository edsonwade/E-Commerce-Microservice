version: '3.8'

services:
  config-service:
    image: config-service-app
    container_name: config-service
    ports:
      - "8888:8888"
    volumes:
      - ./config-service:/config-service
    environment:
      - SPRING_PROFILES_ACTIVE=native
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  discovery-service:
    image: discovery-service-app
    container_name: discovery-service
    ports:
      - "8761:8761"
    depends_on:
      config-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - CONFIG_SERVICE_URI=http://config-service:8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway-service:
    image: gateway-service-app
    container_name: gateway-service
    ports:
      - "8222:8222"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  customer-service:
    image: customer-service-app
    container_name: customer-service
    ports:
      - "8081:8081"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8888
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=customerdb
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    image: product-service-app
    container_name: product-service
    ports:
      - "8082:8082"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8888
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_service_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    image: your-order-service-image
    container_name: order-service
    ports:
      - "8083:8083"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8888
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_service_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  payment-service:
    image: your-payment-service-image
    container_name: payment-service
    ports:
      - "8086:8086"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8888
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=payment_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    image: your-notification-service-image
    container_name: notification-service
    ports:
      - "8084:8084"
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
    environment:
      - CONFIG_SERVICE_URI=http://config-service:8888
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=notificationdb
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - config-service
      - discovery-service
      - gateway-service
      - customer-service
      - product-service
      - order-service
      - payment-service
      - notification-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "zookeeper-shell", "localhost:2181", "ruok"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo-data:
  postgres-data:
  grafana-storage:
